// Code generated by MockGen. DO NOT EDIT.
// Source: internal/components/bn_price_cli.go

// Package mock_components is a generated GoMock package.
package mock_components

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	decimal "github.com/shopspring/decimal"
)

// MockBnPriceCli is a mock of BnPriceCli interface.
type MockBnPriceCli struct {
	ctrl     *gomock.Controller
	recorder *MockBnPriceCliMockRecorder
}

// MockBnPriceCliMockRecorder is the mock recorder for MockBnPriceCli.
type MockBnPriceCliMockRecorder struct {
	mock *MockBnPriceCli
}

// NewMockBnPriceCli creates a new mock instance.
func NewMockBnPriceCli(ctrl *gomock.Controller) *MockBnPriceCli {
	mock := &MockBnPriceCli{ctrl: ctrl}
	mock.recorder = &MockBnPriceCliMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBnPriceCli) EXPECT() *MockBnPriceCliMockRecorder {
	return m.recorder
}

// QueryETHPrice mocks base method.
func (m *MockBnPriceCli) QueryETHPrice(start, end int64, interval string) (decimal.Decimal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "QueryETHPrice", start, end, interval)
	ret0, _ := ret[0].(decimal.Decimal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// QueryETHPrice indicates an expected call of QueryETHPrice.
func (mr *MockBnPriceCliMockRecorder) QueryETHPrice(start, end, interval interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "QueryETHPrice", reflect.TypeOf((*MockBnPriceCli)(nil).QueryETHPrice), start, end, interval)
}
